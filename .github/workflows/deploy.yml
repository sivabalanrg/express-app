name: Deploy to ECS

# Trigger the workflow on pushes to the master/main branch
on:
  push:
    branches:
      - develop-v1

jobs:
  # Build and deploy the app
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2
     
      # Set up Docker Buildx to build the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to AWS using GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
      
      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
	run: |
	  aws ecr get-login-password --region ${{ secrets.AWS_REGION }} |
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      
      # Build the Docker image
      - name: Build Docker image
        run: |
          docker buildx create --use
	  docker buildx build --platform linux/amd64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/express-app:latest .
     
      # Push the Docker image to ECR
      run: |
	docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/express-app:latest
      
      # Deploy to ECS
      run: |
	aws ecs update-service \
	  --cluster express-cluster \
	  --service express-service \
	  --force-new-deployment
